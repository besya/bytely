{"version":3,"sources":["pages/Home.js","components/PopularItem.js","components/Popular.js","components/Country.js","components/Countries.js","pages/Statistics.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Home","React","Component","PopularItem","href","this","props","originalUrl","target","rel","shortUrl","redirects","unique_redirects","Popular","Table","striped","bordered","hover","links","map","link","url","token","redirects_count","unique_redirects_count","Country","name","Countries","countries","country","Statistics","getCountries","Axios","get","window","API_URL","then","response","setState","data","getPopular","state","Container","Breadcrumb","Item","active","Navbar","bg","variant","Brand","Nav","className","to","App","Header","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30cdd09e.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Home extends React.Component {\n  render() {\n    return(\n      <h1>Home</h1>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass PopularItem extends React.Component {\n  render() {\n    return(\n      <tr>\n        <td>\n          <a href={this.props.originalUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.originalUrl}\n          </a>\n        </td>\n        <td>\n          <a href={this.props.shortUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.shortUrl}\n          </a>\n        </td>\n        <td>{this.props.redirects}</td>\n        <td>{this.props.unique_redirects}</td>\n      </tr>\n    );\n  }\n}\n\nexport default PopularItem;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport PopularItem from \"./PopularItem\";\n\nclass Popular extends React.Component {\n\n  render() {\n    return(\n      <Table striped bordered hover>\n        <thead>\n        <tr>\n          <th>Destination URL</th>\n          <th>Short URL</th>\n          <th>Total uses</th>\n          <th>Unique uses</th>\n        </tr>\n        </thead>\n        <tbody>\n        {this.props.links.map(link => (\n          <PopularItem originalUrl={link.url}\n                       shortUrl={link.token}\n                       redirects={link.redirects_count}\n                       unique_redirects={link.unique_redirects_count}\n          />\n        ))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default Popular;\n","import React from \"react\";\n\nclass Country extends React.Component {\n  render() {\n    return(\n      <tr>\n        <td>{this.props.name}</td>\n        <td>{this.props.redirects}</td>\n        <td>{this.props.unique_redirects}</td>\n      </tr>\n    );\n  }\n}\n\nexport default Country;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Country from \"./Country\";\n\nclass Countries extends React.Component {\n  render() {\n    return(\n      <div>\n        <Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Country</th>\n            <th>Total uses</th>\n            <th>Unique uses</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.props.countries.map(country => (\n            <Country name={country.name}\n                     redirects={country.redirects_count}\n                     unique_redirects={country.unique_redirects_count}\n            />\n          ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Countries;\n","import React from \"react\";\nimport Popular from \"../components/Popular\";\nimport Countries from \"../components/Countries\";\nimport Container from \"react-bootstrap/Container\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport Axios from \"axios\";\n\nclass Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { countries: [], links: [] };\n  }\n\n  getCountries = () => {\n    Axios\n      .get(window.API_URL + \"countries\")\n      .then(response => this.setState({countries: response.data}));\n  };\n\n  getPopular = () => {\n    Axios\n      .get(window.API_URL + \"popular\")\n      .then(response => this.setState({links: response.data}));\n  };\n\n  componentDidMount() {\n    this.getPopular();\n    this.getCountries();\n  }\n\n  render() {\n    return(\n      <Container>\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n          <Breadcrumb.Item active>Statistics</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <h1>Statistics</h1>\n\n        <br/>\n\n        <div>\n          <h2>Most popular links</h2>\n          <Popular links={this.state.links}/>\n        </div>\n\n        <br/>\n\n        <div>\n          <h2>By Countries</h2>\n          <Countries countries={this.state.countries}/>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Statistics;\n","import Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport React from \"react\";\nimport Link from \"react-router-dom/Link\";\n\nexport default function () {\n  return(\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">Navbar</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Link to=\"/\" className=\"nav-link\">Home</Link>\n        <Link to=\"/statistics\"  className=\"nav-link\">Statistics</Link>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Statistics from \"./pages/Statistics\";\nimport Container from \"react-bootstrap/Container\";\nimport Header from \"./components/Header\";\n\nif(process.env.NODE_ENV === 'development'){\n  window.API_URL = \"http://localhost:8080/api/\";\n} else {\n  window.API_URL = \"/api/\";\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Header />\n        </Container>\n        <div>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/statistics\">\n              <Statistics />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}