{"version":3,"sources":["components/ShortenForm.js","components/LastShorts.js","pages/Home.js","components/PopularItem.js","components/Popular.js","components/Country.js","components/Countries.js","components/GeneralStatistics.js","pages/Statistics.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ShortenForm","props","handleSubmit","event","preventDefault","url","state","includes","setState","shortenUrl","then","setForCopy","catch","handleErrors","link","short","showCopy","handleChange","target","value","error","handleCopy","elm","innerText","setTimeout","reason","message","Form","onSubmit","this","Row","Group","as","Col","md","InputGroup","Control","type","placeholder","aria-describedby","name","onChange","isInvalid","Feedback","align","text","Button","onClick","className","lastShort","React","Component","LastShorts","Table","variant","links","map","index","key","href","rel","Home","Axios","post","window","API_URL","headers","response","data","handleDataFormat","addToLastShorts","lastShorts","slice","concat","hasOwnProperty","Error","errors","Container","style","background","backgroundSize","Jumbotron","PopularItem","originalUrl","shortUrl","redirects","unique_redirects","Popular","striped","bordered","hover","redirects_count","unique_redirects_count","Country","percentage","Countries","countries","total","uniqueRedirects","country","parseInt","Math","round","GeneralStatistics","CardDeck","Card","Body","Text","Badge","pill","totalRedirects","Title","Statistics","getCountries","get","updateCountriesState","getPopular","items","total_redirects","Breadcrumb","Item","active","Navbar","bg","Brand","Nav","to","exact","activeClassName","Footer","App","Header","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f774386.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\n\nclass ShortenForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {url: '', error: '', showCopy: false};\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let url = this.state.url;\n\n    if(!url.includes('://')){\n      url = 'http://' + url;\n    }\n\n    this.setState({url: url});\n\n    this.props\n      .shortenUrl(url)\n      .then(this.setForCopy)\n      .catch(this.handleErrors);\n  };\n\n  setForCopy = link => {\n    this.setState({url: link.short, showCopy: true});\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n\n    const url = event.target.value;\n    this.setState({url: url, error: '', showCopy: false});\n  };\n\n  handleCopy = event => {\n    let elm = event.target;\n    elm.innerText = 'Copied!';\n    setTimeout(() => (elm.innerText = 'Copy'), 1000);\n  };\n\n  handleErrors = reason => {\n    this.setState({error: reason.message});\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.lastShort !== state.lastShort) {\n      return {\n        url: state.url,\n        lastShort: props.lastShort\n      };\n    }\n    return null;\n  }\n\n  render() {\n    return(\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Row>\n          <Form.Group as={Col} md=\"10\">\n            <InputGroup>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Short your link\"\n                aria-describedby=\"inputGroupPrepend\"\n                name=\"url\"\n                value={this.state.url}\n                onChange={this.handleChange}\n                isInvalid={!!this.state.error}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {this.state.error}\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n          <Col md={2} align=\"right\">\n            {this.state.showCopy ? (\n              <CopyToClipboard text={this.state.url}>\n                <Button onClick={this.handleCopy} className=\"btn-block\">Copy</Button>\n              </CopyToClipboard>\n            ) : (\n              <Button type=\"submit\" className=\"btn-block\">Shorten</Button>\n            )}\n          </Col>\n        </Form.Row>\n      </Form>\n    );\n  }\n}\n\nexport default ShortenForm;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\n\nclass LastShorts extends React.Component {\n  handleCopy = event => {\n    let elm = event.target;\n    elm.innerText = 'Copied!';\n    setTimeout(() => (elm.innerText = 'Copy'), 1000);\n  };\n\n  render() {\n    return(\n      <Table variant=\"dark\">\n        <tbody>\n        {this.props.links.map((link, index) => (\n          <tr key={index}>\n            <td className=\"align-middle\">\n              <a href={link.url} target=\"_blank\" className=\"text-white\" rel=\"noopener noreferrer\">\n                {link.url}\n              </a>\n            </td>\n            <td align=\"right\" className=\"align-middle\">\n              <a href={link.short} target=\"_blank\" className=\"text-white\" rel=\"noopener noreferrer\">\n                {link.short}\n              </a>\n            </td>\n            <td align=\"right\">\n              <CopyToClipboard text={link.short}>\n                <Button onClick={this.handleCopy} className=\"btn-block\">Copy</Button>\n              </CopyToClipboard>\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </Table>\n    )\n  }\n}\n\nexport default LastShorts;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport ShortenForm from \"../components/ShortenForm\";\nimport LastShorts from \"../components/LastShorts\";\nimport Axios from \"axios\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lastShorts: []};\n  }\n\n  shortenUrl = (url) => {\n    return Axios\n      .post(window.API_URL + 'shorten', {url: url}, { headers: {'Content-Type': 'application/json'}})\n      .then(response => response.data)\n      .then(this.handleDataFormat)\n      .then(this.addToLastShorts);\n  };\n\n  addToLastShorts = link => {\n    this.setState({lastShorts: this.state.lastShorts.slice(-2).concat([link])});\n    return link;\n  };\n\n  handleDataFormat = data => {\n    if(data.hasOwnProperty('errors')){\n      throw new Error(data.errors[0]);\n    } else{\n      return data;\n    }\n  };\n\n  render() {\n    return(\n      <div>\n        <Container style={{ background: 'url(background.jpeg) top', backgroundSize: 'cover' }}>\n          <Jumbotron className=\"bg-transparent pl-0 mb-0\">\n            <h1>Create Click-Worthy Links</h1>\n            <p>\n              Build and protect your brand using powerful, recognizable short links.\n            </p>\n          </Jumbotron>\n        </Container>\n        <Container className=\"bg-dark pt-3\">\n          <ShortenForm shortenUrl={this.shortenUrl}/>\n        </Container>\n        <Container className=\"bg-dark\">\n          <LastShorts links={this.state.lastShorts}/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass PopularItem extends React.Component {\n  render() {\n    return(\n      <tr>\n        <td>\n          <a href={this.props.originalUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.originalUrl}\n          </a>\n        </td>\n        <td>\n          <a href={this.props.shortUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.shortUrl}\n          </a>\n        </td>\n        <td>{this.props.redirects}</td>\n        <td>{this.props.unique_redirects}</td>\n      </tr>\n    );\n  }\n}\n\nexport default PopularItem;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport PopularItem from \"./PopularItem\";\n\nclass Popular extends React.Component {\n\n  render() {\n    return(\n      <Table striped bordered hover className=\"mt-4\">\n        <thead>\n        <tr>\n          <th>Destination URL</th>\n          <th>Short URL</th>\n          <th>Total uses</th>\n          <th>Unique uses</th>\n        </tr>\n        </thead>\n        <tbody>\n        {this.props.links.map((link, index) => (\n          <PopularItem key={index}\n                       originalUrl={link.url}\n                       shortUrl={link.short}\n                       redirects={link.redirects_count}\n                       unique_redirects={link.unique_redirects_count}\n          />\n        ))}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default Popular;\n","import React from \"react\";\n\nclass Country extends React.Component {\n  render() {\n    return(\n      <tr>\n        <td>{this.props.name}</td>\n        <td>{this.props.redirects}</td>\n        <td>{this.props.unique_redirects}</td>\n        <td>{this.props.percentage}%</td>\n      </tr>\n    );\n  }\n}\n\nexport default Country;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Country from \"./Country\";\n\nclass Countries extends React.Component {\n  countries = () => {\n    const total = this.props.uniqueRedirects;\n\n    return this.props.countries.map(country => {\n      const percentage = 100.0 * parseInt(country.unique_redirects_count) / parseInt(total);\n      country.percentage = Math.round(percentage);\n      return country;\n    });\n  };\n\n  render() {\n    return(\n      <div>\n        <Table striped bordered hover className=\"mt-4\">\n          <thead>\n          <tr>\n            <th>Country</th>\n            <th>Total uses</th>\n            <th>Unique uses</th>\n            <th>Percent of all users</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.countries().map((country, index) => (\n            <Country key={index}\n                     name={country.name}\n                     redirects={country.redirects_count}\n                     unique_redirects={country.unique_redirects_count}\n                     percentage={country.percentage}\n            />\n          ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Countries;\n","import React from \"react\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\n\nclass GeneralStatistics extends React.Component {\n  render() {\n    return(\n      <CardDeck>\n        <Card>\n          <Card.Body>\n            <Card.Text className=\"display-1 text-center\">\n              <Badge pill variant=\"success\">{this.props.totalRedirects}</Badge>\n            </Card.Text>\n            <Card.Title className=\"text-center\">Redirects</Card.Title>\n          </Card.Body>\n        </Card>\n        <Card>\n          <Card.Body>\n            <Card.Text className=\"display-1 text-center\">\n              <Badge pill variant=\"info\">{this.props.uniqueRedirects}</Badge>\n            </Card.Text>\n            <Card.Title className=\"text-center\">Users</Card.Title>\n          </Card.Body>\n        </Card>\n      </CardDeck>\n    );\n  }\n}\n\nexport default GeneralStatistics;\n","import React from \"react\";\nimport Popular from \"../components/Popular\";\nimport Countries from \"../components/Countries\";\nimport GeneralStatistics from \"../components/GeneralStatistics\";\nimport Container from \"react-bootstrap/Container\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport Axios from \"axios\";\n\nclass Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { countries: [], links: [], totalRedirects: 0, uniqueRedirects: 0 };\n  }\n\n  getCountries = () => {\n    Axios\n      .get(window.API_URL + \"countries\")\n      .then(response => this.updateCountriesState(response.data));\n  };\n\n  getPopular = () => {\n    Axios\n      .get(window.API_URL + \"popular\")\n      .then(response => this.setState({links: response.data}));\n  };\n\n  updateCountriesState(data) {\n    this.setState({\n      countries: data.items,\n      totalRedirects: data.total_redirects,\n      uniqueRedirects: data.unique_redirects\n    });\n  }\n\n  componentDidMount() {\n    this.getPopular();\n    this.getCountries();\n  }\n\n  render() {\n    return(\n      <div>\n        <Container className=\"p-0 mt-3\">\n          <Breadcrumb>\n            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n            <Breadcrumb.Item active>Statistics</Breadcrumb.Item>\n          </Breadcrumb>\n        </Container>\n        <Container className=\"p-0\">\n          <h1>Statistics</h1>\n\n          <GeneralStatistics totalRedirects={this.state.totalRedirects}\n                             uniqueRedirects={this.state.uniqueRedirects}\n          />\n\n          <div className=\"mt-4\">\n            <h2>Most popular links</h2>\n            <Popular links={this.state.links}/>\n          </div>\n          <div className=\"mt-4\">\n            <h2>By Countries</h2>\n            <Countries countries={this.state.countries}\n                       totalRedirects={this.state.totalRedirects}\n                       uniqueRedirects={this.state.uniqueRedirects}\n            />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;\n","import Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nexport default function () {\n  return(\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">Bytely</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <NavLink to=\"/\" exact className=\"nav-link\" activeClassName=\"active\">Home</NavLink>\n        <NavLink to=\"/statistics\" className=\"nav-link\" activeClassName=\"active\">Statistics</NavLink>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React from \"react\";\n\nclass Footer extends React.Component {\n  render() {\n    return(\n      <footer>\n        <div className=\"text-center py-3\">\n          © 2020 Copyright. Ihar Biaspalau\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Statistics from \"./pages/Statistics\";\nimport Container from \"react-bootstrap/Container\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nif(process.env.NODE_ENV === 'development'){\n  window.API_URL = \"http://localhost:8080/api/\";\n} else {\n  window.API_URL = \"/api/\";\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container className=\"bg-dark\">\n          <Header />\n        </Container>\n        <div>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/statistics\">\n              <Statistics />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n        <Container className=\"bg-dark text-white\">\n          <Footer/>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}